package WindowAA;

import javax.swing.*;
import java.awt.Graphics;
import java.io.*;
import java.util.*;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.lang.*;

public class NewJFrame extends JFrame {
    Boolean Edi=false;
   
    public NewJFrame() {
        initComponents();
       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        
        //Line LinesFRAME[];
        //Star StarsFRAM[];
        
        jpnlHead = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jpnlPaint = new PaintPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new AnswerButton();
        jButton8 = new AnswerButton();
        jButton9 = new AnswerButton();
        jButton10 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jpnlMenu = new javax.swing.JPanel();
        jbtn1 = new javax.swing.JButton();
        jbtn3 = new javax.swing.JButton();
        jbtn4 = new javax.swing.JButton();
        jbtn2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        
        
        /*BufferedReader in;
        BufferedReader in2;
        String s="";
        String z="";
        
        /*try {
            in2 = new BufferedReader(new InputStreamReader(new FileInputStream("c:\\SQLStars.txt")));
            while (in2.ready()) {
                z = in2.readLine();
            }
        } catch (IOException e) {
        }
        String z2[] = z.split(":");
        Star Stars[] = new Star[Integer.parseInt(z2[0])];
        
        int o = 0;
       
        for(int i = 1; i < z2.length; i++)
        {
            try {
            String z3[] = z2[i].split(" ");
            
            Stars[o] = new Star(Integer.parseInt(z3[0]),z3[1],Integer.parseInt(z3[2]),Integer.parseInt(z3[3]),Integer.parseInt(z3[4]));
            o++;
            } catch (NumberFormatException e) {
            e.printStackTrace();
        } 
        }
        
        try {
            in = new BufferedReader(new InputStreamReader(new FileInputStream("c:\\SQLConstellations.txt")));
            while (in.ready()) {
                s = in.readLine();
            }
        } catch (IOException e) {
        }
        String s2[] = s.split(":");
        int j = Integer.parseInt(s2[0]);
        Constellation Constellations[];
        Constellations = new Constellation[j];
        int k = 0;
        
        
        
        for(int i = 1;i<s2.length;i=i+4)
        {
            String s3[] = s2[i+2].split(" "); // s3 - содержит айди звезд, которые находятся в этом созвездии
            //Constellations[k].Stars = new Star[s3.length];
            Star TempStars[] = new Star[s3.length];
            for(int t = 0; t<s3.length;t++)
            {
                for(int h = 0; h<Stars.length;h++)
                {
                    if(Integer.parseInt(s3[t])==Stars[h].ID)
                        TempStars[t]= new Star(Stars[h]);
                }
            }
            String s4[] =s2[i+3].split("-");
            Line TempLines[] =  new Line[s4.length];
            Star TempSt1 = new Star();
            Star TempSt2 = new Star();
            for(int t = 0; t<s4.length;t++)
            {
                String s5[] = s4[t].split(" "); //сплит по пробелу для разделения айди звезд для линий
                
                for(int p = 0; p<Stars.length;p++)
                {
                    if(Integer.parseInt(s5[0])==Stars[p].ID)
                        TempSt1= new Star(Stars[p]);
                    if(Integer.parseInt(s5[1])==Stars[p].ID)
                        TempSt2 = new Star(Stars[p]);
                        
                    
                }
                TempLines[t] = new Line(TempSt1,TempSt2);
                
            }
            
            Constellations[k] = new Constellation(Integer.parseInt(s2[i]),s2[i+1],TempStars,TempLines);
            k++;
            
        }*/
       
        
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        
        ButtonGroup bg = new ButtonGroup();
        bg.add(jButton7);
        bg.add(jButton8);
        bg.add(jButton9);
        
        jButton7.setVisible(false);
    
        jButton8.setVisible(false);
    
        jButton9.setVisible(false);
        
        jButton10.setVisible(true);
        
        jpnlHead.setBackground(new java.awt.Color(51, 51, 51));
        jpnlHead.setForeground(new java.awt.Color(204, 204, 0));

        jTextField1.setBackground(new java.awt.Color(51, 51, 51));
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 18));
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setText("Star Search");

        jButton10.setText("Next");
        jButton10.setPreferredSize(new java.awt.Dimension(127, 23));
        jButton10.setLocation(300, 300);
        jpnlPaint.add(jButton10);
        
        javax.swing.GroupLayout jpnlHeadLayout = new javax.swing.GroupLayout(jpnlHead);
        jpnlHead.setLayout(jpnlHeadLayout);
        jpnlHeadLayout.setHorizontalGroup(
            jpnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlHeadLayout.createSequentialGroup()
                .addContainerGap(484, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(334, 334, 334))
        );
        jpnlHeadLayout.setVerticalGroup(
            jpnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlHeadLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jpnlPaint.setBackground(new java.awt.Color(0, 0, 0));
        jpnlPaint.setMinimumSize(new java.awt.Dimension(604, 537));
        jpnlPaint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnlPaintMouseClicked(evt);
            }
        });

        jButton1.setText("Guess Constellation");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setRequestFocusEnabled(false);
        jButton1.setVisible(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Insert a Star");
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setPreferredSize(new java.awt.Dimension(127, 23));
        jButton2.setVisible(false);

        jButton3.setText("Guess a Star");
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setPreferredSize(new java.awt.Dimension(127, 23));
        jButton3.setVisible(false);

        jButton4.setText("Results");
        jButton4.setPreferredSize(new java.awt.Dimension(127, 23));
        jButton4.setVisible(false);

        jButton5.setText("Back to Menu");
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton5.setPreferredSize(new java.awt.Dimension(127, 23));
        jButton5.setVisible(false);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        
        
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        
        jButton7.setText("jButton7");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });

        jButton8.setText("jButton8");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });

        jButton9.setText("jButton9");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setText("Score : ");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel1.setVisible(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16));
        jLabel2.setText("Time : ");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel2.setVisible(false);

        javax.swing.GroupLayout jpnlPaintLayout = new javax.swing.GroupLayout(jpnlPaint);
        jpnlPaint.setLayout(jpnlPaintLayout);
        jpnlPaintLayout.setHorizontalGroup(
            jpnlPaintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlPaintLayout.createSequentialGroup()
                .addGroup(jpnlPaintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlPaintLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(85, 85, 85)
                        .addGroup(jpnlPaintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnlPaintLayout.createSequentialGroup()
                                .addGroup(jpnlPaintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(95, 95, 95)
                                .addGroup(jpnlPaintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel2)))
                    .addGroup(jpnlPaintLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jButton7)
                        .addGap(68, 68, 68)
                        .addComponent(jButton8)
                        .addGap(70, 70, 70)
                        .addComponent(jButton9)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jpnlPaintLayout.setVerticalGroup(
            jpnlPaintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlPaintLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jpnlPaintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 317, Short.MAX_VALUE)
                .addGroup(jpnlPaintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jpnlPaintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jpnlMenu.setBackground(new java.awt.Color(0, 0, 255));

        jbtn1.setText("New Game");
        jbtn1.setMaximumSize(new java.awt.Dimension(85, 23));
        jbtn1.setMinimumSize(new java.awt.Dimension(85, 23));
        jbtn1.setPreferredSize(new java.awt.Dimension(85, 23));
        jbtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtn1MouseClicked(evt);
            }
        });

        jbtn3.setText("Editor");
        jbtn3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtn3MouseClicked(evt);
            }
        });

        jbtn4.setText("Exit");
        jbtn4.setMaximumSize(new java.awt.Dimension(85, 23));
        jbtn4.setMinimumSize(new java.awt.Dimension(85, 23));
        jbtn4.setPreferredSize(new java.awt.Dimension(85, 23));
        jbtn4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtn4MouseClicked(evt);
            }
        });
        

        jbtn2.setText("Results");
        jbtn2.setMaximumSize(new java.awt.Dimension(85, 23));
        jbtn2.setMinimumSize(new java.awt.Dimension(85, 23));
        jbtn2.setPreferredSize(new java.awt.Dimension(85, 23));

        javax.swing.GroupLayout jpnlMenuLayout = new javax.swing.GroupLayout(jpnlMenu);
        jpnlMenu.setLayout(jpnlMenuLayout);
        jpnlMenuLayout.setHorizontalGroup(
            jpnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtn4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtn3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jpnlMenuLayout.setVerticalGroup(
            jpnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlMenuLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jbtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jbtn3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 325, Short.MAX_VALUE)
                .addComponent(jbtn4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setMaximumSize(new java.awt.Dimension(157, 537));
        jPanel1.setVisible(false);

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.setVisible(false);
        jScrollPane1.setViewportView(jList1);

        jCheckBox1.setText("Star");
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });

        jCheckBox2.setText("Line");

        jTextField2.setText("Name");

        jTextField3.setText("Type");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel3.setText("Place X : ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel4.setText("Place Y : ");

        jTextField4.setText("X");

        jTextField5.setText("Y");

        jButton6.setText("Submit");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap(24, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCheckBox2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextField5))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton6))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addGap(30, 30, 30)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlHead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnlPaint, javax.swing.GroupLayout.PREFERRED_SIZE, 600, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpnlHead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpnlPaint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpnlMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jpnlMenu.getAccessibleContext().setAccessibleName("jlblMenu");

        pack();
    }// </editor-fold>                        

private void jbtn1MouseClicked(java.awt.event.MouseEvent evt) {                                   
    jButton1.setVisible(true);
    jButton2.setVisible(true);
    jButton3.setVisible(true);
    
    jpnlMenu.setVisible(false);
    jButton4.setVisible(true);
    
    jButton5.setVisible(true);

    
    //jLabel1.setVisible(true);
    //jLabel2.setVisible(true);
    
}                                  

private void jbtn4MouseClicked(java.awt.event.MouseEvent evt) {                                   
    System.exit(1);
}                                  

private void formMouseClicked(java.awt.event.MouseEvent evt) {                                  
// TODO add your handling code here:
}                                 

private void jbtn3MouseClicked(java.awt.event.MouseEvent evt) {                                   
    //jButton1.setVisible(true);
    //jButton2.setVisible(true);
    //jButton3.setVisible(true);
    
    Edi=true;
    
    jpnlMenu.setVisible(false);
    jPanel1.setVisible(true);
    
    //Edi = true;
    
    //jButton4.setVisible(true);
    
    jButton5.setVisible(true);
    
    jList1.setVisible(true);
}                                  

private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {                                        
    //jCheckBox1.get
}                                       

private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {                                      
    jButton1.setVisible(false);
    jButton2.setVisible(false);
    jButton3.setVisible(false);
    
    jButton7.setVisible(false);
    jButton8.setVisible(false);
    jButton9.setVisible(false);
    
    Edi = false;
    
    jpnlMenu.setVisible(true);
    jPanel1.setVisible(false);
    
    jButton4.setVisible(false);
    jButton5.setVisible(false);
    
    jLabel1.setVisible(false);
    jLabel2.setVisible(false);
    
    jList1.setVisible(false);
}                                     

private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {                                      
    jLabel1.setVisible(false);
    jLabel2.setVisible(false);
    jButton7.setVisible(true);
    jButton8.setVisible(true);
    jButton9.setVisible(true);
    //jButton1.setVisible(false);
    //jButton2.setVisible(false);
    //jButton3.setVisible(false);
    
    jButton7.setSelected(false);
    jButton8.setSelected(false);
    jButton9.setSelected(false);
    jLabel1.setVisible(false);
    
    
    Game = 1;
    
        BufferedReader in;
        BufferedReader in2;
        String s="";
        String z="";
        
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        
        try {
            in2 = new BufferedReader(new InputStreamReader(new FileInputStream(StarSQL)));
            while (in2.ready()) {
                z = in2.readLine();
            }
        } catch (IOException e) {
        }
        String z2[] = z.split(":");
        Star Stars[] = new Star[Integer.parseInt(z2[0])];
        
        int o = 0;
        for(int i = 1; i < z2.length; i++)
        {
            try {
            String z3[] = z2[i].split(" ");
            Stars[o] = new Star(Integer.parseInt(z3[0]),z3[1],Integer.parseInt(z3[2]),Integer.parseInt(z3[3]),Integer.parseInt(z3[4]));
            o++;
            } catch (NumberFormatException e) {
            e.printStackTrace();
        } 
        }

        try {
            in = new BufferedReader(new InputStreamReader(new FileInputStream(ConstellationSQL)));
            while (in.ready()) {
                s = in.readLine();
            }
        } catch (IOException e) {
        }
        String s2[] = s.split(":");
        int j = Integer.parseInt(s2[0]);
        Constellation Constellations[];
        Constellations = new Constellation[j];
        int k = 0;
        
        
        
        for(int i = 1;i<s2.length;i=i+4)
        {
            String s3[] = s2[i+2].split(" "); // s3 - содержит айди звезд, которые находятся в этом созвездии
            //Constellations[k].Stars = new Star[s3.length];
            Star TempStars[] = new Star[s3.length];
            for(int t = 0; t<s3.length;t++)
            {
                for(int h = 0; h<Stars.length;h++)
                {
                    if(Integer.parseInt(s3[t])==Stars[h].ID)
                    //Constellations[k].Stars[t] = Stars[h];
                        TempStars[t]= new Star(Stars[h]);
                }
            }
            String s4[] =s2[i+3].split("-");
            Line TempLines[] =  new Line[s4.length];
            Star TempSt1 = new Star();
            Star TempSt2 = new Star();
            for(int t = 0; t<s4.length;t++)
            {
                String s5[] = s4[t].split(" "); //сплит по пробелу для разделения айди звезд для линий
                //Constellations[k].Lines = new Line[s4.length];  
                for(int p = 0; p<Stars.length;p++)
                {
                    if(Integer.parseInt(s5[0])==Stars[p].ID)
                        TempSt1= new Star(Stars[p]);
                    if(Integer.parseInt(s5[1])==Stars[p].ID)
                        TempSt2 = new Star(Stars[p]);
                        

                }
                TempLines[t] = new Line(TempSt1,TempSt2);

                
            }
            
            Constellations[k] = new Constellation(Integer.parseInt(s2[i]),s2[i+1],TempStars,TempLines);
            k++;
        }

        int b = new Random(System.currentTimeMillis()).nextInt((Constellations.length) - 0) + 0;
       
            System.out.println("Game = 1, Constellation rnd = "+b);
            
            
            int rndAnsw1 = new Random(System.currentTimeMillis()).nextInt(Constellations.length - 0) + 0;
            int rndAnsw2 = new Random(System.currentTimeMillis()).nextInt(Constellations.length - 0) + 0;
            System.out.println("Game = 1, Constellation rndAnsw1 = "+rndAnsw1);
            System.out.println("Game = 1, Constellation rndAnsw2 = "+rndAnsw2);
            int rndRightAnsw1 = new Random(System.currentTimeMillis()).nextInt(3 - 1) + 1;
            System.out.println("Game = 1, Constellation RightAnswer = "+rndRightAnsw1);
            System.out.println("---------------------------------------------------------------------------");
            
            switch(rndRightAnsw1){
                case 1 :
                    jButton7.setText(Constellations[b].Name);jButton7.Flag=true;
                    jButton8.setText(Constellations[rndAnsw1].Name);jButton8.Flag=false;if(rndAnsw1==b)jButton8.Flag=true;
                    jButton9.setText(Constellations[rndAnsw2].Name);jButton9.Flag=false;if(rndAnsw2==b)jButton9.Flag=true;
                case 2 :
                    jButton7.setText(Constellations[rndAnsw1].Name);jButton7.Flag=false;if(rndAnsw1==b)jButton7.Flag=true;
                    jButton8.setText(Constellations[b].Name);jButton8.Flag=true;
                    jButton9.setText(Constellations[rndAnsw2].Name);jButton9.Flag=false;if(rndAnsw2==b)jButton9.Flag=true;
                case 3 :
                    jButton7.setText(Constellations[rndAnsw2].Name);jButton7.Flag=false;if(rndAnsw2==b)jButton7.Flag=true;
                    jButton8.setText(Constellations[rndAnsw1].Name);jButton8.Flag=false;if(rndAnsw1==b)jButton8.Flag=true;
                    jButton9.setText(Constellations[b].Name);jButton9.Flag=true;
            }
           
            //BufferedImage sd;
            Graphics gt= getGraphics();
           for(int i =0;i<Constellations[b].Lines.length;i++){
               
               
               LinesFrame.add(Constellations[b].Lines[i]);
               jpnlPaint.add(Constellations[b].Lines[i]);
               Constellations[b].Lines[i].setVisible(true);
               Constellations[b].Lines[i].paint(gt);
               
            }
            for(int i =0;i<Constellations[b].Stars.length;i++){
                
                 StarsFrame.add(Constellations[b].Stars[i]);
                jpnlPaint.add(Constellations[b].Stars[i]);
                Constellations[b].Stars[i].setVisible(true);
                Constellations[b].Stars[i].paint(gt);
        
            }
            repaint();
            /*while(!jButton7.isSelected() && !jButton8.isSelected() && !jButton9.isSelected())
            {
                if(jButton7.isSelected() && jButton7.Flag){Score = Score + 10;jLabel1.setText("Score : " + Score);}
                if(jButton8.isSelected() && jButton7.Flag){Score = Score + 10;jLabel1.setText("Score : " + Score);}
                if(jButton9.isSelected() && jButton7.Flag){Score = Score + 10;jLabel1.setText("Score : " + Score);}
                if(jButton7.isSelected() && !jButton7.Flag){jLabel1.setText("Score : " + Score);}
                if(jButton8.isSelected() && !jButton7.Flag){jLabel1.setText("Score : " + Score);}
                if(jButton9.isSelected() && !jButton7.Flag){jLabel1.setText("Score : " + Score);}
            }*/
                     
}   

private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {
    jLabel1.setVisible(false);
    jLabel2.setVisible(false);
    jButton7.setVisible(true);
    jButton8.setVisible(true);
    jButton9.setVisible(true);
    jButton7.setSelected(false);
    jButton8.setSelected(false);
    jButton9.setSelected(false);
    //jButton1.setVisible(false);
    //jButton2.setVisible(false);
    //jButton3.setVisible(false);
    jLabel1.setVisible(false);
    
    Game = 3;
    
        BufferedReader in;
        BufferedReader in2;
        String s="";
        String z="";
        
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        
        try {
            in2 = new BufferedReader(new InputStreamReader(new FileInputStream(StarSQL)));
            while (in2.ready()) {
                z = in2.readLine();
            }
        } catch (IOException e) {
        }
        String z2[] = z.split(":");
        Star Stars[] = new Star[Integer.parseInt(z2[0])];
        
        int o = 0;
        for(int i = 1; i < z2.length; i++)
        {
            try {
            String z3[] = z2[i].split(" ");
            Stars[o] = new Star(Integer.parseInt(z3[0]),z3[1],Integer.parseInt(z3[2]),Integer.parseInt(z3[3]),Integer.parseInt(z3[4]));
            o++;
            } catch (NumberFormatException e) {
            e.printStackTrace();
        } 
        }

        try {
            in = new BufferedReader(new InputStreamReader(new FileInputStream(ConstellationSQL)));
            while (in.ready()) {
                s = in.readLine();
            }
        } catch (IOException e) {
        }
        String s2[] = s.split(":");
        int j = Integer.parseInt(s2[0]);
        Constellation Constellations[];
        Constellations = new Constellation[j];
        int k = 0;
        
        
        
        for(int i = 1;i<s2.length;i=i+4)
        {
            String s3[] = s2[i+2].split(" "); // s3 - содержит айди звезд, которые находятся в этом созвездии
            //Constellations[k].Stars = new Star[s3.length];
            Star TempStars[] = new Star[s3.length];
            for(int t = 0; t<s3.length;t++)
            {
                for(int h = 0; h<Stars.length;h++)
                {
                    if(Integer.parseInt(s3[t])==Stars[h].ID)
                    //Constellations[k].Stars[t] = Stars[h];
                        TempStars[t]= new Star(Stars[h]);
                }
            }
            String s4[] =s2[i+3].split("-");
            Line TempLines[] =  new Line[s4.length];
            Star TempSt1 = new Star();
            Star TempSt2 = new Star();
            for(int t = 0; t<s4.length;t++)
            {
                String s5[] = s4[t].split(" "); //сплит по пробелу для разделения айди звезд для линий
                //Constellations[k].Lines = new Line[s4.length];  
                for(int p = 0; p<Stars.length;p++)
                {
                    if(Integer.parseInt(s5[0])==Stars[p].ID)
                        TempSt1= new Star(Stars[p]);
                    if(Integer.parseInt(s5[1])==Stars[p].ID)
                        TempSt2 = new Star(Stars[p]);
                        

                }
                TempLines[t] = new Line(TempSt1,TempSt2);

                
            }
            
            Constellations[k] = new Constellation(Integer.parseInt(s2[i]),s2[i+1],TempStars,TempLines);
            k++;
        }
        
        int b = new Random(System.currentTimeMillis()).nextInt(Constellations.length - 0) + 0;
        int c = new Random(System.currentTimeMillis()).nextInt(Constellations[b].Stars.length - 0)+0;
        Constellations[b].Stars[c].Allocation = true;
            
            
            int rndAnsw1 = new Random(System.currentTimeMillis()).nextInt(Constellations[b].Stars.length - 0) + 0;
            int rndAnsw2 = new Random(System.currentTimeMillis()).nextInt(Constellations[b].Stars.length - 0) + 0;
            int rndRightAnsw1 = new Random(System.currentTimeMillis()).nextInt(3 - 1) + 1;
            
            System.out.println("Game = 2, Constellation rnd = "+b);
            System.out.println("Game = 2, Star RightAnswerName = "+c);
            System.out.println("Game = 2, Star rndAnsw1 = "+rndAnsw1);
            System.out.println("Game = 2, Star rndAnsw2 = "+rndAnsw2);
            System.out.println("Game = 2, Constellation RightAnswer = "+rndRightAnsw1);
            System.out.println("---------------------------------------------------------------------------");
            
            switch(rndRightAnsw1){
                case 1 :
                    jButton7.setText(Constellations[b].Stars[c].Name);jButton7.Flag=true;
                    jButton8.setText(Constellations[b].Stars[rndAnsw1].Name);jButton8.Flag=false;if(rndAnsw1==c)jButton8.Flag=true;
                    jButton9.setText(Constellations[b].Stars[rndAnsw2].Name);jButton9.Flag=false;if(rndAnsw2==c)jButton9.Flag=true;
                case 2 :
                    jButton7.setText(Constellations[b].Stars[rndAnsw1].Name);jButton7.Flag=false;if(rndAnsw1==c)jButton7.Flag=true;
                    jButton8.setText(Constellations[b].Stars[c].Name);jButton8.Flag=true;
                    jButton9.setText(Constellations[b].Stars[rndAnsw2].Name);jButton9.Flag=false;if(rndAnsw2==c)jButton9.Flag=true;
                case 3 :
                    jButton7.setText(Constellations[b].Stars[rndAnsw2].Name);jButton7.Flag=false;if(rndAnsw2==c)jButton7.Flag=true;
                    jButton8.setText(Constellations[b].Stars[rndAnsw1].Name);jButton8.Flag=false;if(rndAnsw1==c)jButton8.Flag=true;
                    jButton9.setText(Constellations[b].Stars[c].Name);jButton9.Flag=true;
            }
           
            //BufferedImage sd;
            Graphics gt= getGraphics();
           for(int i =0;i<Constellations[b].Lines.length;i++){
               LinesFrame.add(Constellations[b].Lines[i]);
                jpnlPaint.add(Constellations[b].Lines[i]);
                Constellations[b].Lines[i].setVisible(true);
                Constellations[b].Lines[i].paint(gt);

            }
            for(int i =0;i<Constellations[b].Stars.length;i++){
                StarsFrame.add(Constellations[b].Stars[i]);
                jpnlPaint.add(Constellations[b].Stars[i]);
                Constellations[b].Stars[i].setVisible(true);
                Constellations[b].Stars[i].paint(gt);
        
            }
            jButton7.setVisible(false);
            jButton8.setVisible(false);
            jButton9.setVisible(false);
            repaint();
        
        
}

private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {
    jLabel1.setVisible(false);
    Game = 2;
    StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame);
        BufferedReader in;
        BufferedReader in2;
        String s="";
        String z="";
        
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        
        try {
            in2 = new BufferedReader(new InputStreamReader(new FileInputStream(StarSQL)));
            while (in2.ready()) {
                z = in2.readLine();
            }
        } catch (IOException e) {
        }
        String z2[] = z.split(":");
        Star Stars[] = new Star[Integer.parseInt(z2[0])];
        
        int o = 0;
        for(int i = 1; i < z2.length; i++)
        {
            try {
            String z3[] = z2[i].split(" ");
            Stars[o] = new Star(Integer.parseInt(z3[0]),z3[1],Integer.parseInt(z3[2]),Integer.parseInt(z3[3]),Integer.parseInt(z3[4]));
            o++;
            } catch (NumberFormatException e) {
            e.printStackTrace();
        } 
        }

        try {
            in = new BufferedReader(new InputStreamReader(new FileInputStream(ConstellationSQL)));
            while (in.ready()) {
                s = in.readLine();
            }
        } catch (IOException e) {
        }
        String s2[] = s.split(":");
        int j = Integer.parseInt(s2[0]);
        Constellation Constellations[];
        Constellations = new Constellation[j];
        int k = 0;
        
        
        
        for(int i = 1;i<s2.length;i=i+4)
        {
            String s3[] = s2[i+2].split(" "); // s3 - содержит айди звезд, которые находятся в этом созвездии
            //Constellations[k].Stars = new Star[s3.length];
            Star TempStars[] = new Star[s3.length];
            for(int t = 0; t<s3.length;t++)
            {
                for(int h = 0; h<Stars.length;h++)
                {
                    if(Integer.parseInt(s3[t])==Stars[h].ID)
                    //Constellations[k].Stars[t] = Stars[h];
                        TempStars[t]= new Star(Stars[h]);
                }
            }
            String s4[] =s2[i+3].split("-");
            Line TempLines[] =  new Line[s4.length];
            Star TempSt1 = new Star();
            Star TempSt2 = new Star();
            for(int t = 0; t<s4.length;t++)
            {
                String s5[] = s4[t].split(" "); //сплит по пробелу для разделения айди звезд для линий
                //Constellations[k].Lines = new Line[s4.length];  
                for(int p = 0; p<Stars.length;p++)
                {
                    if(Integer.parseInt(s5[0])==Stars[p].ID)
                        TempSt1= new Star(Stars[p]);
                    if(Integer.parseInt(s5[1])==Stars[p].ID)
                        TempSt2 = new Star(Stars[p]);
                        

                }
                TempLines[t] = new Line(TempSt1,TempSt2);

                
            }
            
            Constellations[k] = new Constellation(Integer.parseInt(s2[i]),s2[i+1],TempStars,TempLines);
            k++;
        }
        
        int b = new Random(System.currentTimeMillis()).nextInt(Constellations.length - 0) + 0;
        int c = new Random(System.currentTimeMillis()).nextInt(Constellations[b].Stars.length - 0)+0;
        Constellations[b].Stars[c].Visibility=false;
            
            
            
            
            System.out.println("Game = 2, Constellation rnd = "+b);
            System.out.println("Game = 2, Star RightAnswerName = "+c);
            
            System.out.println("---------------------------------------------------------------------------");
            
            
                    
             Graphics gt= getGraphics();
           for(int i =0;i<Constellations[b].Lines.length;i++){
               if((Constellations[b].Lines[i].Star1.ID==Constellations[b].Stars[c].ID) || (Constellations[b].Lines[i].Star2.ID==Constellations[b].Stars[c].ID))
               {
                   Constellations[b].Lines[i].Visibility=false;
                   System.out.println(Constellations[b].Lines[i].Star1.ID + " "+ Constellations[b].Lines[i].Star2.ID);
               }
               LinesFrame.add(Constellations[b].Lines[i]);
                jpnlPaint.add(Constellations[b].Lines[i]);
                //Constellations[b].Lines[i].setVisible(true);
                //Constellations[b].Lines[i].paint(gt);

            }
            for(int i =0;i<Constellations[b].Stars.length;i++){
                StarsFrame.add(Constellations[b].Stars[i]);
                jpnlPaint.add(Constellations[b].Stars[i]);
                Constellations[b].Stars[i].setVisible(true);
                Constellations[b].Stars[i].paint(gt);
        
            }
            jButton7.setVisible(false);
            jButton8.setVisible(false);
            jButton9.setVisible(false);
            repaint();
        
    
}

private void jpnlPaintMouseClicked(java.awt.event.MouseEvent evt) {
    if(Game == 2)
    {
        jLabel1.setVisible(true);
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        for(int i =0;i<StarsFrame.size();i++)
        {
            if(StarsFrame.get(i).Visibility==false)
            {
                if(Math.sqrt((StarsFrame.get(i).PlaceX-x)*(StarsFrame.get(i).PlaceX-x)+(StarsFrame.get(i).PlaceY-y)*(StarsFrame.get(i).PlaceY-y))<30)
                {
                    StarsFrame.get(i).Visibility=true;
                    
                    jLabel1.setText("Win");
                    
                }
                else
                {
                    StarsFrame.get(i).Visibility=true;
                    jLabel1.setText("Loose");
                }
            }
        }
        for(int j =0;j<LinesFrame.size();j++)
        {
        //if(LinesFrame.get(j).Star1.ID==StarsFrame.get(i).ID || LinesFrame.get(j).Star2.ID==StarsFrame.get(i).ID)
            LinesFrame.get(j).Visibility=true;
        }
        repaint();
        //Graphics gt= getGraphics();
        //gt.setColor(Color.blue);
        //gt.fillOval(x, y, 30, 30);
        Game = 0;
         
    }
}
private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {
    BufferedReader in2;
    String z="";

    if((Edi == true) && jCheckBox1.isSelected() && !jCheckBox2.isSelected())
    {
        try {
            in2 = new BufferedReader(new InputStreamReader(new FileInputStream(StarSQL)));
            while (in2.ready()) {
                z = in2.readLine();
            }
            } catch (IOException x) {
                        }
        String z2[] = z.split(":"); 
        Star NewStar = new Star(Integer.parseInt(z2[0])+1,jTextField2.getText(),Integer.parseInt(jTextField3.getText()),Integer.parseInt(jTextField4.getText()),Integer.parseInt(jTextField5.getText()));
        jpnlPaint.add(NewStar);
        NewStar.setVisible(true);
        repaint();
        NewStar.save();
    }
}

public void paint(Graphics g)
{
    super.paint(g);
    for(int i = 0;i<LinesFrame.size();i++)
        LinesFrame.get(i).paint(g);
    for(int i = 0;i<StarsFrame.size();i++)
        StarsFrame.get(i).paint(g);
   
//   // if(LinesFRAME != null || StarsFRAME != null)
//    {
//    for(int i = 0; i<LinesFRAME.length;i++)
//        LinesFRAME[i].paint(g);
//    for(int i = 0; i<StarsFRAME.length;i++)
//        StarsFRAME[i].paint(g);
    //}
}

private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {
    if(Game == 1 && jButton7.Flag)
    {
        Game = 0;
        Score = Score + 10;
        jLabel1.setText("Win");
        jLabel1.setVisible(true);
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        jButton7.setSelected(false);
        repaint();
    }
    if(Game == 1 && !jButton7.Flag)
    {
        Game = 0;
        jLabel1.setText("Loose");
        jLabel1.setVisible(true);
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        jButton7.setSelected(false);
        repaint();
    }
    if(Game == 3 && jButton7.Flag)
    {
        Game = 0;
        Score = Score + 10;
        jLabel1.setText("Win");
        jLabel1.setVisible(true);
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        jButton7.setSelected(false);
        repaint();
    }
    if(Game == 3 && !jButton7.Flag)
    {
        Game = 0;
        jLabel1.setText("Loose");
        jLabel1.setVisible(true);
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        jButton7.setSelected(false);
        repaint();
    }    
}

private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {
if(Game == 1 && jButton8.Flag)
    {
        Game = 0;
        Score = Score + 10;
        jLabel1.setText("Win");
        jLabel1.setVisible(true);
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        jButton8.setSelected(false);
        repaint();
    }
    if(Game == 1 && !jButton8.Flag)
    {
        Game = 0;
        jLabel1.setText("Loose");
        jLabel1.setVisible(true);
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        jButton8.setSelected(false);
        repaint();
    }
    if(Game == 3 && jButton7.Flag)
    {
        Game = 0;
        Score = Score + 10;
        jLabel1.setText("Win");
        jLabel1.setVisible(true);
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        jButton7.setSelected(false);
        repaint();
    }
    if(Game == 3 && !jButton7.Flag)
    {
        Game = 0;
        jLabel1.setText("Loose");
        jLabel1.setVisible(true);
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        jButton7.setSelected(false);
        repaint();
    }    
}

private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {
if(Game == 1 && jButton9.Flag)
    {
        Game = 0;
        Score = Score + 10;
        jLabel1.setText("Win");
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        jButton9.setSelected(false);
        jLabel1.setVisible(true);
        repaint();
    }
    if(Game == 1 && !jButton9.Flag)
    {
        Game = 0;
        jLabel1.setText("Loose");
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        jButton9.setSelected(false);
        jLabel1.setVisible(true);
        repaint();
    }
    if(Game == 3 && jButton7.Flag)
    {
        Game = 0;
        Score = Score + 10;
        jLabel1.setText("Win");
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        jButton7.setSelected(false);
        jLabel1.setVisible(true);
        repaint();
    }
    if(Game == 3 && !jButton7.Flag)
    {
        Game = 0;
        jLabel1.setText("Loose");
        jLabel1.setVisible(true);
        StarsFrame.removeAll(StarsFrame);
        LinesFrame.removeAll(LinesFrame); 
        jButton7.setSelected(false);
        repaint();
    }    
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
                    
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton10;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JButton jbtn1;
    private javax.swing.JButton jbtn2;
    private javax.swing.JButton jbtn3;
    private javax.swing.JButton jbtn4;
    private javax.swing.JPanel jpnlHead;
    private javax.swing.JPanel jpnlMenu;
    private PaintPanel jpnlPaint;
    private AnswerButton jButton7;
    private AnswerButton jButton8;
    private AnswerButton jButton9;
            
    //для ФАЙЛОВ!!!
    String StarSQL = "/SQLStars.txt";
    String ConstellationSQL = "/SQLConstellations.txt";
    //Line LinesFRAME[];
    //Star StarsFRAME[];
    //int ls,ll = 0;
    
    int Score = 0;
    private javax.swing.Timer timer;
    ActionListener timeListener;
    int t = 30000;
    
    int Game = 0;
    private ArrayList<Star> StarsFrame = new ArrayList();
    private ArrayList<Line> LinesFrame = new ArrayList();
}
